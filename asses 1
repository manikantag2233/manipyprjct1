import requests
from bs4 import BeautifulSoup
import pandas as pd
import time
import matplotlib.pyplot as plt
from datetime import datetime

class TrafficMonitor:
    def __init__(self, url, traffic_table_id, location_column, traffic_level_column):
        self.url = url
        self.traffic_table_id = traffic_table_id
        self.location_column = location_column
        self.traffic_level_column = traffic_level_column

    def get_traffic_data(self):
        """Fetches traffic data from the specified URL."""
        try:
            response = requests.get(self.url)
            response.raise_for_status()  # Raise an exception for bad status codes

            soup = BeautifulSoup(response.content, 'html.parser')

            traffic_table = soup.find('table', id=self.traffic_table_id)
            data = []
            for row in traffic_table.find_all('tr'):
                cols = row.find_all('td')
                if len(cols) > 0:
                    location = cols[self.location_column].text.strip()
                    traffic_level = cols[self.traffic_level_column].text.strip()
                    data.append([location, traffic_level])

            return pd.DataFrame(data, columns=['Location', 'Traffic Level'])

        except requests.exceptions.RequestException as e:
            print(f"Error fetching data: {e}")
            return None

    def visualize_traffic(self, data):
        """Visualizes traffic data using a bar chart."""
        if data is not None:
            plt.figure(figsize=(10, 6))
            plt.bar(data['Location'], data['Traffic Level'].astype(float))  # Assuming traffic level is numerical
            plt.xlabel('Location')
            plt.ylabel('Traffic Level')
            plt.title('Real-Time Traffic Monitoring')
            plt.xticks(rotation=45)
            plt.tight_layout()
            plt.show()

if __name__ == "__main__":
    # Replace with the actual URL of your traffic data source
    traffic_url = "https://www.example.com/traffic"  # Placeholder - Provide the real URL

    # Replace with the ID of the traffic table on the website
    traffic_table_id = "traffic-table"  # Placeholder - Adjust based on website structure

    # Replace with the column indices for location and traffic level
    location_column = 0  # Placeholder - Adjust based on table structure
    traffic_level_column = 1  # Placeholder - Adjust based on table structure

    monitor = TrafficMonitor(traffic_url, traffic_table_id, location_column, traffic_level_column)

    while True:
        traffic_data = monitor.get_traffic_data()
        if traffic_data is not None:
            print(f"---- Traffic Data ({datetime.now()}) ----")
            print(traffic_data)
            monitor.visualize_traffic(traffic_data)

        # Update data every X seconds (adjust as needed)
        time.sleep(60) 
